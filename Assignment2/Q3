#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = newNode;
    return newNode;
}

void insertNode(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != *head) {
        temp = temp->next;
    }
    temp->next = newNode;
    newNode->next = *head;
}

void deleteNode(struct Node** head, struct Node* nodeToDelete) {
    if (*head == NULL) {
        return;
    }
    if (*head == nodeToDelete) {
        *head = nodeToDelete->next;
    }
    struct Node* temp = *head;
    while (temp->next != nodeToDelete) {
        temp = temp->next;
    }
    temp->next = nodeToDelete->next;
    free(nodeToDelete);
}

void josephus(int n, int k) {
    struct Node* head = NULL;
    for (int i = 1; i <= n; i++) {
        insertNode(&head, i);
    }

    struct Node* current = head;
    while (n > 1) {
        for (int i = 1; i < k; i++) {
            current = current->next;
        }
        struct Node* nextNode = current->next;
        printf("%d has been eliminated.\n", current->data);
        deleteNode(&head, current);
        current = nextNode;
        n--;
    }
    printf("The last remaining person is: %d\n", current->data);
    free(current);
}

int main() {
    int n, k;
    printf("Enter the number of people (n): ");
    scanf("%d", &n);
    printf("Enter the value of k: ");
    scanf("%d", &k);

    if (n <= 0 || k <= 0) {
        printf("Invalid input. Both n and k must be positive integers.\n");
        return 1;
    }

    josephus(n, k);

    return 0;
}

